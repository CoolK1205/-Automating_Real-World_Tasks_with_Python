#!/usr/bin/env python3

import json
import locale
import sys
from reports import generate as report
from emails import generate as email_generate
from emails import send as email_send


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])

def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  locale.setlocale(locale.LC_ALL, 'en_US.UTF8')
  revenue = []
  numbersold = []
  yearsold = {}

  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    amountsold = item["total_sales"]

    revenue.append(amountsold * item_price)
    numbersold.append(amountsold)
    
    year = item["car"]["car_year"]
    if not year in yearsold.keys():
      yearsold[year] = amountsold
    else:
      yearsold[year] += amountsold

  revenue_key = revenue.index(max(revenue))
  quantity_key = numbersold.index(max(numbersold))
  maxyear = max(yearsold, key=yearsold.get)

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(data[revenue_key]["car"]), max(revenue)),
    "The {} had the most sales: {}".format(
      format_car(data[quantity_key]["car"]), max(numbersold)),
    "The most popular year was {} with {} sales.".format(
      maxyear, yearsold[maxyear])
  ]

  return "\n".join(summary)

def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data

def main(argv):
   """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
    # TODO: turn this into a PDF report
  report('/tmp/cars.pdf', "Cars report", summary, cars_dict_to_table(data))
    # TODO: send the PDF report as an email attachment
  msg = email_generate("automation@example.com", "student-03-4a1ed70a68a6@examp$
                         "Sales summary for last month", summary, "/tmp/cars.pd$
  email_send(msg)

if __name__ == "__main__":
  main(sys.argv)